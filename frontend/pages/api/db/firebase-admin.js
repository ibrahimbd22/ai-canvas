// ai-canvas/frontend/pages/api/db/firebase-admin.js
// ‚úÖ Firebase Admin SDK - Only for Serverless Environment (Next.js API Routes)

import admin from 'firebase-admin';

// --- ‡ßß. Firebase Service Account Configuration ---
// FIREBASE_SERVICE_ACCOUNT: Environment Variable (one-line JSON string from .env / Vercel)
const serviceAccount = process.env.FIREBASE_SERVICE_ACCOUNT
  ? JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT)
  : null;

if (!serviceAccount) {
  console.error("‚ùå FIREBASE_SERVICE_ACCOUNT environment variable not found!");
}

// --- ‡ß®. Initialize Firebase App (only once) ---
if (!admin.apps.length && serviceAccount) {
  try {
    admin.initializeApp({
      credential: admin.credential.cert(serviceAccount),
      // databaseURL ‡¶ê‡¶ö‡ßç‡¶õ‡¶ø‡¶ï ‚Äî Firestore ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶π‡¶Ø‡¶º ‡¶®‡¶æ
    });
    console.log("‚úÖ Firebase Admin initialized successfully.");
  } catch (error) {
    console.error("‚ùå Firebase Admin initialization error:", error);
  }
}

// --- ‡ß©. Firestore instance ---
const db = admin.firestore();

// --- ‡ß™. Collection Path ---
// üî∏ Firestore best practice: Root-level collections, not nested under documents.
// ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá‡¶∞ path (artifacts/.../data/posts) document nesting ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø‡¶≤, ‡¶Ø‡¶æ ideal ‡¶®‡ßü‡•§
// ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶∏‡¶∞‡¶≤ ‡¶ì ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßã:
const POSTS_COLLECTION = "ai_canvas_posts";

// --- ‡ß´. Export objects ---
export { admin, db, POSTS_COLLECTION };